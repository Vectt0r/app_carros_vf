Essa query retorna o id da linha que foi salvo os dados

const query = 'INSERT INTO carros_controle (nome_funcionario, placa, km_inicial, km_final, hora_saida, hora_chegada, data, cidade, localidade, cidade_02, localidade_02, status) VALUES (?, ?, ? , ?, ?, ?, ?, ?, ?, ?, ?, ?)';
connection.query(
  query,
  [nome, placa, kmInicial, kmFinal, horaSaida, horaChegada, data, cidade, localidade, cidadeDois, localidadeDois, status],
  (error, results) => {
    if (error) {
      console.error('Erro ao inserir dados no banco de dados:', error);
      res.status(500).json({ error: 'Erro ao inserir dados no banco de dados' });
    } else {
      const insertedId = results.insertId; // Obtém o ID da linha recém-inserida
      res.json({ success: true, message: 'Dados inseridos com sucesso', insertedId });
    }
  }
);



const updateQuery = 'UPDATE carros_controle SET nome_funcionario = ?, placa = ?, km_inicial = ?, km_final = ?, hora_saida = ?, hora_chegada = ?, data = ?, cidade = ?, localidade = ?, cidade_02 = ?, localidade_02 = ?, status = ? WHERE id = ?';

// Supondo que você tenha o ID da linha que deseja atualizar (por exemplo, passando como parâmetro)
const idDaLinhaParaAtualizar = 1; // Substitua pelo ID correto

connection.query(
  updateQuery,
  [novoNome, novaPlaca, novaKmInicial, novaKmFinal, novaHoraSaida, novaHoraChegada, novaData, novaCidade, novaLocalidade, novaCidadeDois, novaLocalidadeDois, novoStatus, idDaLinhaParaAtualizar],
  (error, results) => {
    if (error) {
      console.error('Erro ao atualizar dados no banco de dados:', error);
      res.status(500).json({ error: 'Erro ao atualizar dados no banco de dados' });
    } else {
      res.json({ success: true, message: 'Dados atualizados com sucesso' });
    }
  }
);
